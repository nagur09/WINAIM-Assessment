Implementation:

Initialize Project:

mkdir inventory-management
cd inventory-management
npm init -y
npm install express sequelize mysql2 body-parser


Database Connection:


const { Sequelize } = require('sequelize');

const sequelize = new Sequelize('inventory_db', 'username', 'password', {
    host: 'localhost',
    dialect: 'mysql'
});

module.exports = sequelize;



Define Models:


const { DataTypes } = require('sequelize');
const sequelize = require('./database');

const Product = sequelize.define('Product', {
    name: DataTypes.STRING,
    description: DataTypes.STRING,
    barcode: DataTypes.STRING,
    price: DataTypes.FLOAT
});

const Supplier = sequelize.define('Supplier', {
    name: DataTypes.STRING,
    contact_info: DataTypes.STRING
});

const Warehouse = sequelize.define('Warehouse', {
    location: DataTypes.STRING,
    manager: DataTypes.STRING,
    contact_info: DataTypes.STRING
});

const StockLevel = sequelize.define('StockLevel', {
    product_id: DataTypes.INTEGER,
    warehouse_id: DataTypes.INTEGER,
    quantity: DataTypes.INTEGER
});

const ProductMovement = sequelize.define('ProductMovement', {
    product_id: DataTypes.INTEGER,
    from_warehouse_id: DataTypes.INTEGER,
    to_warehouse_id: DataTypes.INTEGER,
    quantity: DataTypes.INTEGER,
    movement_date: DataTypes.DATE
});

module.exports = { Product, Supplier, Warehouse, StockLevel, ProductMovement };




Create API Routes:



const express = require('express');
const bodyParser = require('body-parser');
const { Product, Supplier, Warehouse, StockLevel, ProductMovement } = require('./models');

const app = express();
app.use(bodyParser.json());

app.post('/api/products', async (req, res) => {
    const product = await Product.create(req.body);
    res.json(product);
});

app.get('/api/products', async (req, res) => {
    const products = await Product.findAll();
    res.json(products);
});

app.get('/api/products/:id', async (req, res) => {
    const product = await Product.findByPk(req.params.id);
    res.json(product);
});

app.put('/api/products/:id', async (req, res) => {
    const product = await Product.findByPk(req.params.id);
    product.update(req.body);
    res.json(product);
});

app.delete('/api/products/:id', async (req, res) => {
    const product = await Product.findByPk(req.params.id);
    product.destroy();
    res.json({ message: 'Product deleted' });
});

// Similarly, create routes for suppliers, warehouses, stock levels, product movements, and reports

app.listen(3000, () => {
    console.log('Server is running on port 3000');
});






Frontend Implementation 


Initialize React Project:



npx create-react-app inventory-management-frontend
cd inventory-management-frontend
npm start




